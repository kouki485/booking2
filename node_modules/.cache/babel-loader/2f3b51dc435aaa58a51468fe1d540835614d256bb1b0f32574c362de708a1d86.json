{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { getFunctions, connectFunctionsEmulator } from 'firebase/functions';\n\n// Firebase設定\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBmQRFG7eGXcP0qRbcKRPc6uEeuPk5Ajp4\",\n  authDomain: \"booking-5a17b.firebaseapp.com\",\n  projectId: \"booking-5a17b\",\n  storageBucket: \"booking-5a17b.appspot.com\",\n  messagingSenderId: \"1006309665015\",\n  appId: \"1:1006309665015:web:fd2f1bb60bffa2e1970bf2\"\n};\n\n// Firebase初期化\nconst app = initializeApp(firebaseConfig);\n\n// Firestore初期化\nexport const db = getFirestore(app);\n\n// Authentication初期化\nexport const auth = getAuth(app);\n\n// Functions初期化\nexport const functions = getFunctions(app);\n\n// 開発環境でのエミュレーター接続（一時的に無効化）\n// エミュレーターの設定問題を回避するため、一時的にコメントアウト\n/*\nif (process.env.NODE_ENV === 'development' && !window.FIREBASE_EMULATOR_CONNECTED) {\n  try {\n    // Firestoreエミュレーター\n    connectFirestoreEmulator(db, 'localhost', 8080);\n    \n    // Authエミュレーター\n    connectAuthEmulator(auth, 'http://localhost:9099');\n    \n    // Functionsエミュレーター\n    connectFunctionsEmulator(functions, 'localhost', 5001);\n    \n    window.FIREBASE_EMULATOR_CONNECTED = true;\n    console.log('Firebase エミュレーターに接続しました');\n  } catch (error) {\n    console.log('Firebase エミュレーター接続をスキップしました:', error.message);\n  }\n}\n*/\n\nexport default app;","map":{"version":3,"names":["initializeApp","getFirestore","connectFirestoreEmulator","getAuth","connectAuthEmulator","getFunctions","connectFunctionsEmulator","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","auth","functions"],"sources":["/Users/koukikaida/Desktop/booking/src/services/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { getFunctions, connectFunctionsEmulator } from 'firebase/functions';\n\n// Firebase設定\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBmQRFG7eGXcP0qRbcKRPc6uEeuPk5Ajp4\",\n  authDomain: \"booking-5a17b.firebaseapp.com\",\n  projectId: \"booking-5a17b\",\n  storageBucket: \"booking-5a17b.appspot.com\",\n  messagingSenderId: \"1006309665015\",\n  appId: \"1:1006309665015:web:fd2f1bb60bffa2e1970bf2\"\n};\n\n// Firebase初期化\nconst app = initializeApp(firebaseConfig);\n\n// Firestore初期化\nexport const db = getFirestore(app);\n\n// Authentication初期化\nexport const auth = getAuth(app);\n\n// Functions初期化\nexport const functions = getFunctions(app);\n\n// 開発環境でのエミュレーター接続（一時的に無効化）\n// エミュレーターの設定問題を回避するため、一時的にコメントアウト\n/*\nif (process.env.NODE_ENV === 'development' && !window.FIREBASE_EMULATOR_CONNECTED) {\n  try {\n    // Firestoreエミュレーター\n    connectFirestoreEmulator(db, 'localhost', 8080);\n    \n    // Authエミュレーター\n    connectAuthEmulator(auth, 'http://localhost:9099');\n    \n    // Functionsエミュレーター\n    connectFunctionsEmulator(functions, 'localhost', 5001);\n    \n    window.FIREBASE_EMULATOR_CONNECTED = true;\n    console.log('Firebase エミュレーターに接続しました');\n  } catch (error) {\n    console.log('Firebase エミュレーター接続をスキップしました:', error.message);\n  }\n}\n*/\n\nexport default app; "],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAAEC,wBAAwB,QAAQ,oBAAoB;AAC3E,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,eAAe;AAC5D,SAASC,YAAY,EAAEC,wBAAwB,QAAQ,oBAAoB;;AAE3E;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE,eAAe;EAC1BC,aAAa,EAAE,2BAA2B;EAC1CC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGd,aAAa,CAACO,cAAc,CAAC;;AAEzC;AACA,OAAO,MAAMQ,EAAE,GAAGd,YAAY,CAACa,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAME,IAAI,GAAGb,OAAO,CAACW,GAAG,CAAC;;AAEhC;AACA,OAAO,MAAMG,SAAS,GAAGZ,YAAY,CAACS,GAAG,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}