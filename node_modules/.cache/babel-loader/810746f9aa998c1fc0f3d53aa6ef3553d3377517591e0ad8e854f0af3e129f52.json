{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { onAuthChange, loginWithEmail, logout, createAdminAccount, sendPasswordReset, getCurrentUser, isAdmin } from '../services/authService';\nexport const useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // 認証状態の監視\n    const unsubscribe = onAuthChange(user => {\n      setUser(user);\n      setLoading(false);\n    });\n\n    // クリーンアップ\n    return () => unsubscribe();\n  }, []);\n\n  // ログイン\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await loginWithEmail(email, password);\n      if (result.success) {\n        setUser(result.user);\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      const errorMessage = 'ログインに失敗しました';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ログアウト\n  const handleLogout = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await logout();\n      if (result.success) {\n        setUser(null);\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      const errorMessage = 'ログアウトに失敗しました';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 管理者アカウント作成\n  const createAdmin = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await createAdminAccount(email, password);\n      if (result.success) {\n        setUser(result.user);\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      const errorMessage = 'アカウント作成に失敗しました';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // パスワードリセット\n  const resetPassword = async email => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await sendPasswordReset(email);\n      if (result.success) {\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (error) {\n      const errorMessage = 'パスワードリセットに失敗しました';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // エラーをクリア\n  const clearError = () => {\n    setError(null);\n  };\n  return {\n    // 状態\n    user,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    isAdminUser: isAdmin(user),\n    // アクション\n    login,\n    logout: handleLogout,\n    createAdmin,\n    resetPassword,\n    clearError\n  };\n};\n_s(useAuth, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");","map":{"version":3,"names":["useState","useEffect","onAuthChange","loginWithEmail","logout","createAdminAccount","sendPasswordReset","getCurrentUser","isAdmin","useAuth","_s","user","setUser","loading","setLoading","error","setError","unsubscribe","login","email","password","result","success","errorMessage","handleLogout","createAdmin","resetPassword","clearError","isAuthenticated","isAdminUser"],"sources":["/Users/koukikaida/Desktop/booking/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { \n  onAuthChange, \n  loginWithEmail, \n  logout, \n  createAdminAccount, \n  sendPasswordReset,\n  getCurrentUser,\n  isAdmin \n} from '../services/authService';\n\nexport const useAuth = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // 認証状態の監視\n    const unsubscribe = onAuthChange((user) => {\n      setUser(user);\n      setLoading(false);\n    });\n\n    // クリーンアップ\n    return () => unsubscribe();\n  }, []);\n\n  // ログイン\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const result = await loginWithEmail(email, password);\n      \n      if (result.success) {\n        setUser(result.user);\n        return { success: true };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (error) {\n      const errorMessage = 'ログインに失敗しました';\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ログアウト\n  const handleLogout = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const result = await logout();\n      \n      if (result.success) {\n        setUser(null);\n        return { success: true };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (error) {\n      const errorMessage = 'ログアウトに失敗しました';\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 管理者アカウント作成\n  const createAdmin = async (email, password) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const result = await createAdminAccount(email, password);\n      \n      if (result.success) {\n        setUser(result.user);\n        return { success: true };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (error) {\n      const errorMessage = 'アカウント作成に失敗しました';\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // パスワードリセット\n  const resetPassword = async (email) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const result = await sendPasswordReset(email);\n      \n      if (result.success) {\n        return { success: true };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (error) {\n      const errorMessage = 'パスワードリセットに失敗しました';\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // エラーをクリア\n  const clearError = () => {\n    setError(null);\n  };\n\n  return {\n    // 状態\n    user,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    isAdminUser: isAdmin(user),\n    \n    // アクション\n    login,\n    logout: handleLogout,\n    createAdmin,\n    resetPassword,\n    clearError\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}